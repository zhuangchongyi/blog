(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{363:function(t,a,v){"use strict";v.r(a);var s=v(42),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"java-基本数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-基本数据类型"}},[t._v("#")]),t._v(" Java 基本数据类型")]),t._v(" "),v("p",[t._v("变量就是申请内存来存储值。也就是说，当创建变量的时候，需要在内存中申请空间。")]),t._v(" "),v("p",[t._v("内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来储存该类型数据。\n"),v("img",{attrs:{src:"/img/javajbsjlx.jpg",alt:"RUNOOB"}})]),t._v(" "),v("p",[t._v("因此，通过定义不同类型的变量，可以在内存中储存整数、小数或者字符。")]),t._v(" "),v("p",[t._v("Java 的两大数据类型:")]),t._v(" "),v("ul",[v("li",[t._v("内置数据类型")]),t._v(" "),v("li",[t._v("引用数据类型")])]),t._v(" "),v("p",[t._v("内置数据类型\nJava语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。")]),t._v(" "),v("p",[v("strong",[t._v("byte：")])]),t._v(" "),v("ul",[v("li",[t._v("byte 数据类型是8位、有符号的，以二进制补码表示的整数；")]),t._v(" "),v("li",[t._v("最小值是 -128（-2^7）；")]),t._v(" "),v("li",[t._v("最大值是 127（2^7-1）；")]),t._v(" "),v("li",[t._v("默认值是 0；")]),t._v(" "),v("li",[t._v("byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一；")]),t._v(" "),v("li",[t._v("例子：byte a = 100，byte b = -50")])]),t._v(" "),v("p",[v("strong",[t._v("short：")])]),t._v(" "),v("ul",[v("li",[t._v("short 数据类型是 16 位、有符号的以二进制补码表示的整数")]),t._v(" "),v("li",[t._v("最小值是 -32768（-2^15）；")]),t._v(" "),v("li",[t._v("最大值是 32767（2^15 - 1）；")]),t._v(" "),v("li",[t._v("Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一；")]),t._v(" "),v("li",[t._v("默认值是 0；")]),t._v(" "),v("li",[t._v("例子：short s = 1000，short r = -20000")])]),t._v(" "),v("p",[v("strong",[t._v("int：")])]),t._v(" "),v("ul",[v("li",[t._v("int 数据类型是32位、有符号的以二进制补码表示的整数；")]),t._v(" "),v("li",[t._v("最小值是 -2,147,483,648（-2^31）；")]),t._v(" "),v("li",[t._v("最大值是 2,147,483,647（2^31 - 1）；")]),t._v(" "),v("li",[t._v("一般地整型变量默认为 int 类型；")]),t._v(" "),v("li",[t._v("默认值是 0 ；")]),t._v(" "),v("li",[t._v("例子：int a = 100000, int b = -200000。")])]),t._v(" "),v("p",[v("strong",[t._v("long：")])]),t._v(" "),v("ul",[v("li",[t._v("long 数据类型是 64 位、有符号的以二进制补码表示的整数；")]),t._v(" "),v("li",[t._v("最小值是 -9,223,372,036,854,775,808（-2^63）；")]),t._v(" "),v("li",[t._v("最大值是 9,223,372,036,854,775,807（2^63 -1）；")]),t._v(" "),v("li",[t._v("这种类型主要使用在需要比较大整数的系统上；")]),t._v(" "),v("li",[t._v("默认值是 0L；")]),t._v(" "),v("li",[t._v("例子： long a = 100000L，Long b = -200000L。")]),t._v(" "),v("li",[t._v('"L"理论上不分大小写，但是若写成"l"容易与数字"1"混淆，不容易分辩。所以最好大写。')])]),t._v(" "),v("p",[v("strong",[t._v("float：")])]),t._v(" "),v("ul",[v("li",[t._v("float 数据类型是单精度、32位、符合IEEE 754标准的浮点数；")]),t._v(" "),v("li",[t._v("float 在储存大型浮点数组的时候可节省内存空间；")]),t._v(" "),v("li",[t._v("默认值是 0.0f；")]),t._v(" "),v("li",[t._v("浮点数不能用来表示精确的值，如货币；")]),t._v(" "),v("li",[t._v("例子：float f1 = 234.5f")])]),t._v(" "),v("p",[v("strong",[t._v("double：")])]),t._v(" "),v("ul",[v("li",[t._v("double 数据类型是双精度、64 位、符合IEEE 754标准的浮点数；")]),t._v(" "),v("li",[t._v("浮点数的默认类型为double类型；")]),t._v(" "),v("li",[t._v("double类型同样不能表示精确的值，如货币；")]),t._v(" "),v("li",[t._v("默认值是 0.0d；")]),t._v(" "),v("li",[t._v("例子：double d1 = 123.4")])]),t._v(" "),v("p",[v("strong",[t._v("boolean：")])]),t._v(" "),v("ul",[v("li",[t._v("boolean数据类型表示一位的信息；")]),t._v(" "),v("li",[t._v("只有两个取值：true 和 false；")]),t._v(" "),v("li",[t._v("这种类型只作为一种标志来记录 true/false 情况；")]),t._v(" "),v("li",[t._v("默认值是 false；")]),t._v(" "),v("li",[t._v("例子：boolean one = true。")]),t._v(" "),v("li")]),t._v(" "),v("p",[v("strong",[t._v("char：")])]),t._v(" "),v("ul",[v("li",[t._v("char类型是一个单一的 16 位 Unicode 字符；")]),t._v(" "),v("li",[t._v("最小值是 \\u0000（即为0）；")]),t._v(" "),v("li",[t._v("最大值是 \\uffff（即为65,535）；")]),t._v(" "),v("li",[t._v("char 数据类型可以储存任何字符；")]),t._v(" "),v("li",[t._v("例子：char letter = 'A';\n对于数值类型的基本类型的取值范围，我们无需强制去记忆，因为它们的值都已经以常量的形式定义在对应的包装类中了")])]),t._v(" "),v("p",[t._v('Float和Double的最小值和最大值都是以科学记数法的形式输出的，结尾的"E+数字"表示E之前的数字要乘以10的多少次方。比如3.14E3就是3.14 × 103 =3140，3.14E-3 就是 3.14 x 10-3 =0.00314。')]),t._v(" "),v("p",[t._v("实际上，JAVA中还存在另外一种基本类型 void，它也有对应的包装类 java.lang.Void，不过我们无法直接对它们进行操作")]),t._v(" "),v("h3",{attrs:{id:"类型默认值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#类型默认值"}},[t._v("#")]),t._v(" 类型默认值")]),t._v(" "),v("p",[t._v("下表列出了 Java 各个类型的默认值：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("数据类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("byte")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("short")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("int")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("long")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0L")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("float")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0.0f")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("double")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0.0d")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("char")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("'u0000'")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("String (or any object)")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("null")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("false")])])])]),t._v(" "),v("h2",{attrs:{id:"引用类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#引用类型"}},[t._v("#")]),t._v(" 引用类型")]),t._v(" "),v("ul",[v("li",[t._v("在Java中，引用类型的变量非常类似于C/C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。这些变量在声明时被指定为一个特定的类型，比如 Employee、Puppy 等。变量一旦声明后，类型就不能被改变了。")]),t._v(" "),v("li",[t._v("对象、数组都是引用数据类型。")]),t._v(" "),v("li",[t._v("所有引用类型的默认值都是null。")]),t._v(" "),v("li",[t._v("一个引用变量可以用来引用任何与之兼容的类型。")]),t._v(" "),v("li",[t._v('例子：Site site = new Site("Runoob")。')])]),t._v(" "),v("h2",{attrs:{id:"java-常量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-常量"}},[t._v("#")]),t._v(" Java 常量")]),t._v(" "),v("p",[t._v("常量在程序运行时是不能被修改的。")]),t._v(" "),v("p",[t._v("在 Java 中使用 final 关键字来修饰常量，声明方式和变量类似：")]),t._v(" "),v("blockquote",[v("p",[t._v("final double PI = 3.1415927;")])]),t._v(" "),v("p",[t._v("虽然常量名也可以用小写，但为了便于识别，通常使用大写字母表示常量。")]),t._v(" "),v("p",[t._v("字面量可以赋给任何内置类型的变量。例如：")]),t._v(" "),v("blockquote",[v("p",[t._v("byte a = 68;")]),t._v(" "),v("p",[t._v("char a = 'A'")])]),t._v(" "),v("p",[t._v("byte、int、long、和short都可以用十进制、16进制以及8进制的方式来表示。")]),t._v(" "),v("p",[t._v("当使用常量的时候，前缀 0 表示 8 进制，而前缀 0x 代表 16 进制, 例如：")]),t._v(" "),v("blockquote",[v("p",[t._v("int decimal = 100;")]),t._v(" "),v("p",[t._v("int octal = 0144;")]),t._v(" "),v("p",[t._v("int hexa =  0x64;")])]),t._v(" "),v("p",[t._v("和其他语言一样，Java的字符串常量也是包含在两个引号之间的字符序列。下面是字符串型字面量的例子：")]),t._v(" "),v("blockquote",[v("p",[t._v('"Hello World"')]),t._v(" "),v("p",[t._v('"two\\nlines"')]),t._v(" "),v("p",[t._v('""This is in quotes""')])]),t._v(" "),v("p",[t._v("字符串常量和字符常量都可以包含任何Unicode字符。例如：")]),t._v(" "),v("blockquote",[v("p",[t._v("char a = '\\u0001';")]),t._v(" "),v("p",[t._v('String a = "\\u0001";')])]),t._v(" "),v("p",[t._v("Java语言支持一些特殊的转义字符序列。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("符号")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("字符含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\n")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("换行 (0x0a)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\r")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("回车 (0x0d)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\f")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("换页符(0x0c)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\b")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("退格 (0x08)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\0")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("空字符 (0x0)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\s")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("空格 (0x20)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\t")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("制表符")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v('"')]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("双引号")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("'")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("单引号")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("反斜杠")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\ddd")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("八进制字符 (ddd)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("\\uxxxx")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("16进制Unicode字符 (xxxx)")])])])]),t._v(" "),v("h2",{attrs:{id:"自动类型转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自动类型转换"}},[t._v("#")]),t._v(" 自动类型转换")]),t._v(" "),v("p",[t._v("整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。")]),t._v(" "),v("p",[t._v("转换从低级到高级。")]),t._v(" "),v("blockquote",[v("p",[t._v("低  ------------------------------------\x3e  高")]),t._v(" "),v("p",[t._v("byte,short,char—> int —> long—> float —> double")])]),t._v(" "),v("p",[t._v("数据类型转换必须满足如下规则：")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("不能对boolean类型进行类型转换。")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("不能把对象类型转换成不相关类的对象。")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("在把容量大的类型转换为容量小的类型时必须使用强制类型转换。")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("转换过程中可能导致溢出或损失精度，例如：")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("int i =128;")]),t._v(" "),v("p",[t._v("byte b = (byte)i;")])]),t._v(" "),v("p",[t._v("因为 byte 类型是 8 位，最大值为127，所以当 int 强制转换为 byte 类型时，值 128 时候就会导致溢出。")]),t._v(" "),v("ul",[v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入，例如：")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("(int)23.7 == 23;")]),t._v(" "),v("p",[t._v("(int)-45.89f == -45")])]),t._v(" "),v("h3",{attrs:{id:"自动类型转换-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自动类型转换-2"}},[t._v("#")]),t._v(" 自动类型转换")]),t._v(" "),v("p",[t._v("必须满足转换前的数据类型的位数要低于转换后的数据类型，例如: short数据类型的位数为16位，就可以自动转换位数为32的int类型，同样float数据类型的位数为32，可以自动转换为64位的double类型。")]),t._v(" "),v("h3",{attrs:{id:"强制类型转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转换"}},[t._v("#")]),t._v(" 强制类型转换")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("条件是转换的数据类型必须是兼容的。")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("格式：(type)value type是要强制类型转换后的数据类型")])])])]),t._v(" "),v("h3",{attrs:{id:"隐含强制类型转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#隐含强制类型转换"}},[t._v("#")]),t._v(" 隐含强制类型转换")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("整数的默认类型是 int。")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("浮点型不存在这种情况，因为在定义 float 类型时必须在数字后面跟上 F 或者 f")])])])]),t._v(" "),v("h2",{attrs:{id:"java-变量类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-变量类型"}},[t._v("#")]),t._v(" Java 变量类型")]),t._v(" "),v("p",[t._v("在Java语言中，所有的变量在使用前必须声明。声明变量的基本格式如下：")]),t._v(" "),v("blockquote",[v("p",[t._v("type identifier [ = value][, identifier [= value] ...] ;")])]),t._v(" "),v("p",[t._v("格式说明：type为Java数据类型。identifier是变量名。可以使用逗号隔开来声明多个同类型变量。")]),t._v(" "),v("p",[t._v("以下列出了一些变量的声明实例。注意有些包含了初始化过程。")]),t._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明三个int型整数：a、 b、c")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" d "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明三个整数并赋予初值")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" z "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明并初始化 z")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明并初始化字符串 s")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" pi "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14159")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明了双精度浮点型变量 pi")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" x "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明变量 x 的值是字符 'x'。")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Java")]),t._v("语言支持的变量类型有：\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br")])]),v("ul",[v("li",[t._v("类变量：独立于方法之外的变量，用 static 修饰。")]),t._v(" "),v("li",[t._v("实例变量：独立于方法之外的变量，不过没有 static 修饰。")]),t._v(" "),v("li",[t._v("局部变量：类的方法中的变量。")])]),t._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Variable")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" allClicks"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类变量")]),t._v("\n \n    "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例变量")]),t._v("\n \n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n        "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量")]),t._v("\n \n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br")])]),v("h2",{attrs:{id:"java-局部变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-局部变量"}},[t._v("#")]),t._v(" Java 局部变量")]),t._v(" "),v("ul",[v("li",[t._v("局部变量声明在方法、构造方法或者语句块中；")]),t._v(" "),v("li",[t._v("局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；")]),t._v(" "),v("li",[t._v("访问修饰符不能用于局部变量；")]),t._v(" "),v("li",[t._v("局部变量只在声明它的方法、构造方法或者语句块中可见；")]),t._v(" "),v("li",[t._v("局部变量是在栈上分配的。")]),t._v(" "),v("li",[t._v("局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。")])]),t._v(" "),v("h2",{attrs:{id:"实例变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实例变量"}},[t._v("#")]),t._v(" 实例变量")]),t._v(" "),v("ul",[v("li",[t._v("实例变量声明在一个类中，但在方法、构造方法和语句块之外；")]),t._v(" "),v("li",[t._v("当一个对象被实例化之后，每个实例变量的值就跟着确定；")]),t._v(" "),v("li",[t._v("实例变量在对象创建的时候创建，在对象被销毁的时候销毁；")]),t._v(" "),v("li",[t._v("实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；")]),t._v(" "),v("li",[t._v("实例变量可以声明在使用前或者使用后；")]),t._v(" "),v("li",[t._v("访问修饰符可以修饰实例变量；")]),t._v(" "),v("li",[t._v("实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；")]),t._v(" "),v("li",[t._v("实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；")]),t._v(" "),v("li",[t._v("实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObejectReference.VariableName")])]),t._v(" "),v("h2",{attrs:{id:"类变量（静态变量）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#类变量（静态变量）"}},[t._v("#")]),t._v(" 类变量（静态变量）")]),t._v(" "),v("ul",[v("li",[t._v("类变量也称为静态变量，在类中以 static 关键字声明，但必须在方法之外。")]),t._v(" "),v("li",[t._v("无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。")]),t._v(" "),v("li",[t._v("静态变量除了被声明为常量外很少使用。常量是指声明为public/private，final和static类型的变量。常量初始化后不可改变。")]),t._v(" "),v("li",[t._v("静态变量储存在静态存储区。经常被声明为常量，很少单独使用static声明变量。")]),t._v(" "),v("li",[t._v("静态变量在第一次被访问时创建，在程序结束时销毁。")]),t._v(" "),v("li",[t._v("与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为public类型。")]),t._v(" "),v("li",[t._v("默认值和实例变量相似。数值型变量默认值是0，布尔型默认值是false，引用类型默认值是null。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。")]),t._v(" "),v("li",[t._v("静态变量可以通过：ClassName.VariableName的方式访问。")]),t._v(" "),v("li",[t._v("类变量被声明为public static final类型时，类变量名称一般建议使用大写字母。如果静态变量不是public和final类型，其命名方式与实例变量以及局部变量的命名方式一致")])])])}),[],!1,null,null,null);a.default=_.exports}}]);