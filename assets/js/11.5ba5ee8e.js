(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{360:function(t,e,l){"use strict";l.r(e);var a=l(42),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"java-运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#java-运算符"}},[t._v("#")]),t._v(" Java 运算符")]),t._v(" "),l("p",[t._v("计算机的最基本用途之一就是执行数学运算，作为一门计算机语言，Java也提供了一套丰富的运算符来操纵变量。我们可以把运算符分成以下几组：")]),t._v(" "),l("ul",[l("li",[t._v("算术运算符")]),t._v(" "),l("li",[t._v("关系运算符")]),t._v(" "),l("li",[t._v("位运算符")]),t._v(" "),l("li",[t._v("逻辑运算符")]),t._v(" "),l("li",[t._v("赋值运算符")]),t._v(" "),l("li",[t._v("其他运算符")])]),t._v(" "),l("h2",{attrs:{id:"算术运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),l("p",[t._v("算术运算符用在数学表达式中，它们的作用和在数学中的作用一样。下表列出了所有的算术运算符。")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("操作符")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("例子")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("+")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("加法 - 相加运算符两侧的值")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("A + B 等于 30")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("减法 - 左操作数减去右操作数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("A – B 等于 -10")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("*")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("乘法 - 相乘操作符两侧的值")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("A * B等于200")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("/")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("除法 - 左操作数除以右操作数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("B / A等于2")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("％")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("取余 - 左操作数除以右操作数的余数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("B%A等于0")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("++")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("自增: 操作数的值增加1")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("B++ 或 ++B 等于 21（区别详见下文）")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("自减: 操作数的值减少1")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("B-- 或 --B 等于 19（区别详见下文）")])])])]),t._v(" "),l("h3",{attrs:{id:"自增自减运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#自增自减运算符"}},[t._v("#")]),t._v(" 自增自减运算符")]),t._v(" "),l("ul",[l("li",[t._v("1、"),l("strong",[t._v("自增（++）自减（--）运算符")]),t._v("是一种特殊的算术运算符，在算术运算符中需要两个操作数来进行运算，而自增自减运算符是一个操作数。")]),t._v(" "),l("li",[t._v("2、"),l("strong",[t._v("前缀自增自减法(++a,--a)")]),t._v(" 先进行自增或者自减运算，再进行表达式运算。")]),t._v(" "),l("li",[t._v("3、"),l("strong",[t._v("后缀自增自减法(a++,a--)")]),t._v(" 先进行表达式运算，再进行自增或者自减运算")])]),t._v(" "),l("h2",{attrs:{id:"关系运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[t._v("#")]),t._v(" 关系运算符")]),t._v(" "),l("p",[t._v("下表为Java支持的关系运算符")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("例子")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("==")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("检查如果两个操作数的值是否相等，如果相等则条件为真。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("（A == B）为假。")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("!=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("检查如果两个操作数的值是否相等，如果值不相等则条件为真。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("(A != B) 为真。")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v(">")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("检查左操作数的值是否大于右操作数的值，如果是那么条件为真。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("（A> B）为假。")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("<")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("检查左操作数的值是否小于右操作数的值，如果是那么条件为真。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("（A <B）为真。")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v(">=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("（A> = B）为假。")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("<=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("（A <= B）为真。")])])])]),t._v(" "),l("h3",{attrs:{id:"位运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),l("p",[t._v("Java定义了位运算符，应用于整数类型(int)，长整型(long)，短整型(short)，字符型(char)，和字节型(byte)等类型。")]),t._v(" "),l("p",[t._v("位运算符作用在所有的位上，并且按位运算。假设a = 60，b = 13;它们的二进制格式表示将如下：")]),t._v(" "),l("blockquote",[l("p",[t._v("A = 0011 1100")]),t._v(" "),l("p",[t._v("B = 0000 1101")]),t._v(" "),l("hr"),t._v(" "),l("p",[t._v("A&B = 0000 1100")]),t._v(" "),l("p",[t._v("A | B = 0011 1101")]),t._v(" "),l("p",[t._v("A ^ B = 0011 0001")]),t._v(" "),l("p",[t._v("~A= 1100 0011")])]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("操作符")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("例子")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("＆")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("如果相对应位都是1，则结果为1，否则为0")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("（A＆B），得到12，即0000 1100")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("如果相对应位都是 0，则结果为 0，否则为 1")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("^")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("如果相对应位值相同，则结果为0，否则为1")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("（A ^ B）得到49，即 0011 0001")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("〜")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位取反运算符翻转操作数的每一位，即0变成1，1变成0。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("（〜A）得到-61，即1100 0011")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("<<")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位左移运算符。左操作数按位左移右操作数指定的位数。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("A << 2得到240，即 1111 0000")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v(">>")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位右移运算符。左操作数按位右移右操作数指定的位数。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("A >> 2得到15即 1111")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v(">>>")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("A>>>2得到15即0000 1111")])])])]),t._v(" "),l("h2",{attrs:{id:"逻辑运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),l("p",[t._v("下表列出了逻辑运算符的基本运算，假设布尔变量A为真，变量B为假")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("操作符")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("例子")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("&&")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("(A && B)为假")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("||")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("(A || B)为真")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("！")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("!(A && B)为真")])])])]),t._v(" "),l("h3",{attrs:{id:"短路逻辑运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#短路逻辑运算符"}},[t._v("#")]),t._v(" 短路逻辑运算符")]),t._v(" "),l("p",[t._v("当使用与逻辑运算符时，在两个操作数都为true时，结果才为true，但是当得到第一个操作为false时，其结果就必定是false，这时候就不会再判断第二个操作了。")]),t._v(" "),l("h2",{attrs:{id:"赋值运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),l("p",[t._v("下面是Java语言支持的赋值运算符：")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("操作符")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("例子")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("简单的赋值运算符，将右操作数的值赋给左侧操作数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C = A + B将把A + B得到的值赋给C")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("+ =")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("加和赋值操作符，它把左操作数和右操作数相加赋值给左操作数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C + = A等价于C = C + A")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("- =")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("减和赋值操作符，它把左操作数和右操作数相减赋值给左操作数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C - = A等价于C = C - A")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("* =")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("乘和赋值操作符，它把左操作数和右操作数相乘赋值给左操作数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C * = A等价于C = C * A")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("/ =")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("除和赋值操作符，它把左操作数和右操作数相除赋值给左操作数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C / = A，C 与 A 同类型时等价于 C = C / A")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("（％）=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("取模和赋值操作符，它把左操作数和右操作数取模后赋值给左操作数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C％= A等价于C = C％A")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("<< =")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左移位赋值运算符")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C << = 2等价于C = C << 2")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v(">> =")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("右移位赋值运算符")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C >> = 2等价于C = C >> 2")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("＆=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位与赋值运算符")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C＆= 2等价于C = C＆2")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("^ =")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位异或赋值操作符")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C ^ = 2等价于C = C ^ 2")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("|=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位或赋值操作符")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C |= 2等价于C = C|2")])])])]),t._v(" "),l("h2",{attrs:{id:"条件运算符（-）"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#条件运算符（-）"}},[t._v("#")]),t._v(" 条件运算符（?:）")]),t._v(" "),l("p",[t._v("条件运算符也被称为三元运算符。该运算符有3个操作数，并且需要判断布尔表达式的值。该运算符的主要是决定哪个值应该赋值给变量。")]),t._v(" "),l("blockquote",[l("p",[t._v("variable x = (expression) ? value if true : value if false")])]),t._v(" "),l("h2",{attrs:{id:"instanceof-运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-运算符"}},[t._v("#")]),t._v(" instanceof 运算符")]),t._v(" "),l("p",[t._v("该运算符用于操作对象实例，检查该对象是否是一个特定类型（类类型或接口类型）。")]),t._v(" "),l("p",[t._v("instanceof运算符使用格式如下：")]),t._v(" "),l("blockquote",[l("p",[t._v("( Object reference variable ) instanceof  (class/interface type)")])]),t._v(" "),l("p",[t._v("如果运算符左侧变量所指的对象，是操作符右侧类或接口(class/interface)的一个对象，那么结果为真。")]),t._v(" "),l("blockquote",[l("p",[t._v('String name = "James";')]),t._v(" "),l("p",[t._v("boolean result = name instanceof String; // 由于 name 是 String 类型，所以返回真")])]),t._v(" "),l("p",[t._v("如果被比较的对象兼容于右侧类型,该运算符仍然返回true。")]),t._v(" "),l("h2",{attrs:{id:"java运算符优先级"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#java运算符优先级"}},[t._v("#")]),t._v(" Java运算符优先级")]),t._v(" "),l("p",[t._v("当多个运算符出现在一个表达式中，谁先谁后呢？这就涉及到运算符的优先级别的问题。在一个多运算符的表达式中，运算符优先级不同会导致最后得出的结果差别甚大。")]),t._v(" "),l("p",[t._v("例如，（1+3）＋（3+2）*2，这个表达式如果按加号最优先计算，答案就是 18，如果按照乘号最优先，答案则是 14。")]),t._v(" "),l("p",[t._v("再如，x = 7 + 3 * 2;这里x得到13，而不是20，因为乘法运算符比加法运算符有较高的优先级，所以先计算3 * 2得到6，然后再加7。")]),t._v(" "),l("p",[t._v("下表中具有最高优先级的运算符在的表的最上面，最低优先级的在表的底部。")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("类别")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("操作符")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("关联性")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("后缀")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("() [] . (点操作符)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("一元")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("expr++ expr--")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("一元")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("++expr --expr + - ～ ！")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从右到左")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("乘性")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("* /％")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("加性")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("+ -")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("移位")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v(">> >>>  <<")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("关系")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("> >= < <=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("相等")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("==  !=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("按位与")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("＆")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("按位异或")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("^")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("按位或")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("|")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑与")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("&&")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑或")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("||")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("条件")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("？：")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从右到左")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("赋值")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("= + = - = * = / =％= >> = << =＆= ^ =")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("=")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("逗号")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("，")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左到右")])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);